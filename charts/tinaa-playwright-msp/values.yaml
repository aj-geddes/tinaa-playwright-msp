# Default values for tinaa-playwright-msp.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/aj-geddes/tinaa-playwright-msp
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext:
  fsGroup: 1000

securityContext:
  capabilities:
    add:
      - SYS_ADMIN  # Required for browser automation
  runAsNonRoot: false
  runAsUser: 0

service:
  type: ClusterIP
  port: 8765
  targetPort: 8765
  annotations: {}

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: tinaa.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: tinaa-tls
  #    hosts:
  #      - tinaa.local

resources:
  limits:
    cpu: 2
    memory: 4Gi
  requests:
    cpu: 500m
    memory: 2Gi

livenessProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 10
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 3

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Volumes configuration (updated dynamically based on persistence settings)
volumes: []

volumeMounts: []

nodeSelector: {}

tolerations: []

affinity: {}

# TINAA specific configuration
tinaa:
  mode: "http"  # Options: mcp, http
  logLevel: "INFO"
  
  # Environment variables
  env:
    - name: PYTHONUNBUFFERED
      value: "1"
    - name: PYTHONPATH
      value: "/app"
    - name: PLAYWRIGHT_BROWSERS_PATH
      value: "/ms-playwright"
    - name: TINAA_MODE
      value: "http"
    - name: WORKSPACE_PATH
      value: "/mnt/workspace"
    - name: AI_CACHE_PATH
      value: "/app/ai-cache"
    - name: TEMPLATES_PATH
      value: "/app/templates"
  
  # AI Provider Configuration
  aiProviders:
    openai:
      enabled: false
      existingSecret: ""  # Use existing k8s secret
      apiKey: ""  # Direct API key (not recommended for production)
      baseUrl: "https://api.openai.com/v1"
      defaultModel: "gpt-4"
    
    anthropic:
      enabled: false
      existingSecret: ""  # Use existing k8s secret
      apiKey: ""  # Direct API key (not recommended for production)
      baseUrl: "https://api.anthropic.com"
      defaultModel: "claude-3-sonnet-20240229"
    
    ollama:
      enabled: false
      baseUrl: "http://ollama:11434"
      defaultModel: "llama2"
  
  # Git Configuration
  git:
    pat:
      enabled: false
      existingSecret: ""  # Use existing k8s secret
      token: ""  # Direct PAT (not recommended for production)
      username: "git"  # Username for PAT authentication
    
    githubApp:
      enabled: false
      existingSecret: ""  # Use existing k8s secret
      appId: ""  # GitHub App ID
      installationId: ""  # GitHub App Installation ID
      privateKey: ""  # GitHub App Private Key (PEM format)
  
  # Secrets Management
  secrets:
    createSecrets: false  # Set to true to create secrets from values
    mountPath: "/var/run/secrets"
  
  # Database configuration for metadata storage
  database:
    enabled: true
    type: "sqlite"  # Options: sqlite, postgresql
    sqlite:
      path: "/mnt/workspace/tinaa.db"
    postgresql:
      host: ""
      port: 5432
      database: "tinaa"
      username: "tinaa"
      passwordSecret: ""  # Reference to k8s secret

  # Persistence configuration
  persistence:
    logs:
      enabled: true
      storageClass: ""
      accessMode: ReadWriteOnce
      size: 5Gi
      existingClaim: ""
    
    workspace:
      enabled: true
      storageClass: ""
      accessMode: ReadWriteOnce
      size: 50Gi  # Storage for multiple Playwright projects
      existingClaim: ""
      mountPath: "/mnt/workspace"
    
    # AI cache for model responses and context
    aiCache:
      enabled: true
      storageClass: ""
      accessMode: ReadWriteOnce
      size: 20Gi
      existingClaim: ""
      mountPath: "/app/ai-cache"
    
    # Project templates and resources
    projectTemplates:
      enabled: true
      storageClass: ""
      accessMode: ReadWriteOnce
      size: 10Gi
      existingClaim: ""
      mountPath: "/app/templates"

# Network Policy
networkPolicy:
  enabled: false
  ingress:
    - from:
      - podSelector:
          matchLabels:
            app: allowed-app
      ports:
      - protocol: TCP
        port: 8765